# -*- coding: utf-8 -*-
"""Data_Processing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pU8HnsV83h8tC2c9k9nl0njXkNbC4exx
"""

import os
import numpy as np
import pandas as pd
import cv2
import matplotlib.pyplot as plt
# %matplotlib inline

dataset_dir = 'drive/Plant Classification Using C-CNN/dataset'  #Change Directory here for dataset

SPECIES = ['Black-grass', 'Charlock', 'Cleavers', 'Common Chickweed', 'Common wheat', 'Fat Hen',
              'Loose Silky-bent', 'Maize', 'Scentless Mayweed', 'Shepherds Purse',
              'Small-flowered Cranesbill', 'Sugar beet']

for species in SPECIES:
    print('{} {} images'.format(species, len(os.listdir(os.path.join(dataset_dir, species)))))

train = []

for spec_num, species in enumerate(SPECIES):
    for file in os.listdir(os.path.join(dataset_dir, species)):
        train.append(['drive/Plant Classification Using C-CNN/dataset/{}/{}'.format(species, file), spec_num, species]) #Change Directory here for  drive/Plant Classification Using C-CNN/dataset
        
train = pd.DataFrame(train, columns=['file', 'spec_num', 'species'])

print('Training Data: ',train.shape)

print(train.head())

def Masking(image):
    hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    sensitivity = 35
    lower= np.array([60 - sensitivity, 100, 50])
    upper= np.array([60 + sensitivity, 255, 255])

    mask = cv2.inRange(hsv_image, lower, upper)
    Morph = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (11,11))
    mask = cv2.morphologyEx(mask, cv2.MORPH_CLOSE, Morph)
    
    return mask

def Segmenting(img):
    mask = Masking(img)
    segmented = cv2.bitwise_and(img, img, mask = mask)
    return segmented

def Sharpening(img):
    img_blur = cv2.GaussianBlur(img, (0, 0), 3)
    sharp = cv2.addWeighted(img, 1.5, img_blur, -0.5, 0)
    return sharp

#%%time

x_train = []

for i in range(len(train)):
    img = cv2.imread(train['file'][i])
    img = cv2.resize(img,dsize=(256,256))
    img_seg = Segmenting(img)
    img_sharp = Sharpening(img_seg)
    img_rgb = cv2.cvtColor( img_sharp, cv2.COLOR_RGB2GRAY )
    img_grey = np.reshape(img_rgb,(256,256,1))
    x_train.append(np.concatenate((np.array(img),np.array(img_grey)),axis=2))
    if ((i % 500) == 0):
      print(i,' images has been processed.')

x_train = np.array(x_train)


from scipy.io import savemat
data ={}
data["train"] = x_train
savemat("drive/Plant Classification Using C-CNN/train/Image_Processed_data.mat", data) #Change directory here to save .mat dataset

from keras.utils.np_utils import to_categorical
labels = train['spec_num']
labels = to_categorical(labels, num_classes = len(SPECIES))

#%%time
from scipy.io import savemat
data ={}
data["train"] = x_train
data["train_labels"] = labels
savemat("drive/Plant Classification Using C-CNN/train/Image_Processed_1data.mat", data)#Change directory here to save .mat dataset


